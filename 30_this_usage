/*this can be used to refer current class instance variable.
this can be used to invoke current class method (implicitly)
this() can be used to invoke current class constructor.
this can be passed as an argument in the method call.
this can be passed as argument in the constructor call.
this can be used to return the current class instance from the method.*/
//Type1
class Student{  
int rollno;  
String name;  
float fee;  
Student(int rollno,String name,float fee){  
this.rollno=rollno;//this is used for using same variable
this.name=name;  
this.fee=fee;  
}  
void display(){System.out.println(rollno+" "+name+" "+fee);}  
}  
class Main{  
public static void main(String args[]){  
Student s1=new Student(111,"ankit",5000f);  
Student s2=new Student(112,"sumit",6000f);  
s1.display();  
s2.display();  
}}  
//Type2
class Sample{  
void m(){System.out.println("hello m");}  
void n(){  
System.out.println("hello n");  
//m();//same as this.m()  
m();  
}  
}  
class Main{  
public static void main(String args[]){  
Sample s=new Sample();  
s.n();  
}}  
//Type3
//Calling default constructor from parameterized constructor:

class Sample{  
Sample(){System.out.println("hello Sample");}  
Sample(int x){  
this();  
System.out.println(x);  
}  
}  
class Main{  
public static void main(String args[]){  
Sample a=new Sample(10);  
}}  
